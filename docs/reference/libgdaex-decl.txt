<MACRO>
<NAME>TYPE_GDAEX</NAME>
#define TYPE_GDAEX                 (gdaex_get_type ())
</MACRO>
<MACRO>
<NAME>GDAEX</NAME>
#define GDAEX(obj)                 (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_GDAEX, GdaEx))
</MACRO>
<MACRO>
<NAME>GDAEX_CLASS</NAME>
#define GDAEX_CLASS(klass)         (G_TYPE_CHECK_CLASS_CAST ((klass), TYPE_GDAEX, GdaExClass))
</MACRO>
<MACRO>
<NAME>IS_GDAEX</NAME>
#define IS_GDAEX(obj)              (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_GDAEX))
</MACRO>
<MACRO>
<NAME>IS_GDAEX_CLASS</NAME>
#define IS_GDAEX_CLASS(klass)      (G_TYPE_CHECK_CLASS_TYPE ((klass), TYPE_GDAEX))
</MACRO>
<MACRO>
<NAME>GDAEX_GET_CLASS</NAME>
#define GDAEX_GET_CLASS(obj)       (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_GDAEX, GdaExClass))
</MACRO>
<STRUCT>
<NAME>GdaEx</NAME>
</STRUCT>
<STRUCT>
<NAME>GdaExClass</NAME>
</STRUCT>
<STRUCT>
<NAME>GdaEx</NAME>
struct _GdaEx
	{
		GObject parent;
	};
</STRUCT>
<STRUCT>
<NAME>GdaExClass</NAME>
struct _GdaExClass
	{
		GObjectClass parent_class;
	};
</STRUCT>
<FUNCTION>
<NAME>gdaex_get_type</NAME>
<RETURNS>GType </RETURNS>
void 
</FUNCTION>
<FUNCTION>
<NAME>gdaex_new_from_dsn</NAME>
<RETURNS>GdaEx *</RETURNS>
const gchar *dsn, const gchar *username, const gchar *password 
</FUNCTION>
<FUNCTION>
<NAME>gdaex_new_from_string</NAME>
<RETURNS>GdaEx *</RETURNS>
const gchar *cnc_string 
</FUNCTION>
<FUNCTION>
<NAME>gdaex_new_from_connection</NAME>
<RETURNS>GdaEx *</RETURNS>
GdaConnection *conn 
</FUNCTION>
<FUNCTION>
<NAME>gdaex_get_gdaconnection</NAME>
<RETURNS>const GdaConnection *</RETURNS>
GdaEx *gdaex 
</FUNCTION>
<FUNCTION>
<NAME>gdaex_get_provider</NAME>
<RETURNS>const gchar *</RETURNS>
GdaEx *gdaex 
</FUNCTION>
<FUNCTION>
<NAME>gdaex_query</NAME>
<RETURNS>GdaDataModel *</RETURNS>
GdaEx *gdaex, const gchar *sql 
</FUNCTION>
<FUNCTION>
<NAME>gdaex_data_model_get_field_value_stringify_at</NAME>
<RETURNS>gchar *</RETURNS>
GdaDataModel *data_model, gint row, const gchar *field_name 
</FUNCTION>
<FUNCTION>
<NAME>gdaex_data_model_get_field_value_integer_at</NAME>
<RETURNS>gint </RETURNS>
GdaDataModel *data_model, gint row, const gchar *field_name 
</FUNCTION>
<FUNCTION>
<NAME>gdaex_data_model_get_field_value_float_at</NAME>
<RETURNS>gfloat </RETURNS>
GdaDataModel *data_model, gint row, const gchar *field_name 
</FUNCTION>
<FUNCTION>
<NAME>gdaex_data_model_get_field_value_double_at</NAME>
<RETURNS>gdouble </RETURNS>
GdaDataModel *data_model, gint row, const gchar *field_name 
</FUNCTION>
<FUNCTION>
<NAME>gdaex_data_model_get_field_value_boolean_at</NAME>
<RETURNS>gboolean </RETURNS>
GdaDataModel *data_model, gint row, const gchar *field_name 
</FUNCTION>
<FUNCTION>
<NAME>gdaex_data_model_get_field_value_gdatimestamp_at</NAME>
<RETURNS>GdaTimestamp *</RETURNS>
GdaDataModel *data_model, gint row, const gchar *field_name 
</FUNCTION>
<FUNCTION>
<NAME>gdaex_data_model_get_field_value_gdate_at</NAME>
<RETURNS>GDate *</RETURNS>
GdaDataModel *data_model, gint row, const gchar *field_name 
</FUNCTION>
<FUNCTION>
<NAME>gdaex_data_model_get_field_value_tm_at</NAME>
<RETURNS>struct tm *</RETURNS>
GdaDataModel *data_model, gint row, const gchar *field_name 
</FUNCTION>
<FUNCTION>
<NAME>gdaex_data_model_get_value_stringify_at</NAME>
<RETURNS>gchar *</RETURNS>
GdaDataModel *data_model, gint row, gint col 
</FUNCTION>
<FUNCTION>
<NAME>gdaex_data_model_get_value_integer_at</NAME>
<RETURNS>gint </RETURNS>
GdaDataModel *data_model, gint row, gint col 
</FUNCTION>
<FUNCTION>
<NAME>gdaex_data_model_get_value_float_at</NAME>
<RETURNS>gfloat </RETURNS>
GdaDataModel *data_model, gint row, gint col 
</FUNCTION>
<FUNCTION>
<NAME>gdaex_data_model_get_value_double_at</NAME>
<RETURNS>gdouble </RETURNS>
GdaDataModel *data_model, gint row, gint col 
</FUNCTION>
<FUNCTION>
<NAME>gdaex_data_model_get_value_boolean_at</NAME>
<RETURNS>gboolean </RETURNS>
GdaDataModel *data_model, gint row, gint col 
</FUNCTION>
<FUNCTION>
<NAME>gdaex_data_model_get_value_gdatimestamp_at</NAME>
<RETURNS>GdaTimestamp *</RETURNS>
GdaDataModel *data_model, gint row, gint col 
</FUNCTION>
<FUNCTION>
<NAME>gdaex_data_model_get_value_gdate_at</NAME>
<RETURNS>GDate *</RETURNS>
GdaDataModel *data_model, gint row, gint col 
</FUNCTION>
<FUNCTION>
<NAME>gdaex_data_model_get_value_tm_at</NAME>
<RETURNS>struct tm *</RETURNS>
GdaDataModel *data_model, gint row, gint col 
</FUNCTION>
<FUNCTION>
<NAME>gdaex_begin</NAME>
<RETURNS>gboolean </RETURNS>
GdaEx *gdaex 
</FUNCTION>
<FUNCTION>
<NAME>gdaex_execute</NAME>
<RETURNS>gint </RETURNS>
GdaEx *gdaex, const gchar *sql 
</FUNCTION>
<FUNCTION>
<NAME>gdaex_commit</NAME>
<RETURNS>gboolean </RETURNS>
GdaEx *gdaex 
</FUNCTION>
<FUNCTION>
<NAME>gdaex_rollback</NAME>
<RETURNS>gboolean </RETURNS>
GdaEx *gdaex 
</FUNCTION>
<FUNCTION>
<NAME>gdaex_free</NAME>
<RETURNS>void </RETURNS>
GdaEx *gdaex 
</FUNCTION>
<FUNCTION>
<NAME>gdaex_strescape</NAME>
<RETURNS>gchar *</RETURNS>
const gchar *source, const gchar *exceptions 
</FUNCTION>
<FUNCTION>
<NAME>gdaex_get_chr_quoting</NAME>
<RETURNS>gchar </RETURNS>
GdaEx *gdaex 
</FUNCTION>
